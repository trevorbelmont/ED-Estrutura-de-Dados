 1. Uso de variável não inicializada na condicional da 6ª linha. Inicializaremos com um random %10 - para uma chance de output de 10%.
    GDB não capta o erro nem o GCC dá qualquer log de inicialização.
    Valgrind notifica numa nota discreta no seu log.
2.
==15346== Memcheck, a memory error detector
==15346== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==15346== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==15346== Command: ./bin/c12errado.exe
==15346== Parent PID: 15337
==15346== 
==15346== Conditional jump or move depends on uninitialised value(s)
==15346==    at 0x109141: main (c12.c:6)
==15346== 
==15346== 
==15346== HEAP SUMMARY:
==15346==     in use at exit: 0 bytes in 0 blocks
==15346==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==15346== 
==15346== All heap blocks were freed -- no leaks are possible
==15346== 
==15346== Use --track-origins=yes to see where uninitialised values come from
==15346== For lists of detected and suppressed errors, rerun with: -s
==15346== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


4.
==15364== Memcheck, a memory error detector
==15364== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==15364== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==15364== Command: ./bin/c12correto.exe
==15364== Parent PID: 15337
==15364== 
==15364== 
==15364== HEAP SUMMARY:
==15364==     in use at exit: 0 bytes in 0 blocks
==15364==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==15364== 
==15364== All heap blocks were freed -- no leaks are possible
==15364== 
==15364== For lists of detected and suppressed errors, rerun with: -s
==15364== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
