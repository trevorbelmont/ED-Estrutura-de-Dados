1. O código acessa variável não declarada no printf da linha 11 - uma vez que o for anterior não alcança a última posição do vetor. 
Por tanto, está imprimindo lixo de memória.


2.
gcc c2.c -o bin/c2errado.exe -g &&valgrind -q --log-file="logs/2_log_ruim" --leak-check=full ./bin/c2errado.exe
cat logs/2_log_ruim >> c2relatorio.txt
==10884== Memcheck, a memory error detector
==10884== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10884== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==10884== Command: ./bin/c2errado.exe
==10884== Parent PID: 10878
==10884== 
==10884== Conditional jump or move depends on uninitialised value(s)
==10884==    at 0x48B829F: __vfprintf_internal (vfprintf-internal.c:1687)
==10884==    by 0x48A3D9A: printf (printf.c:33)
==10884==    by 0x109197: main (c2.c:11)
==10884== 
==10884== Use of uninitialised value of size 8
==10884==    at 0x489DEFB: _itoa_word (_itoa.c:179)
==10884==    by 0x48B78B7: __vfprintf_internal (vfprintf-internal.c:1687)
==10884==    by 0x48A3D9A: printf (printf.c:33)
==10884==    by 0x109197: main (c2.c:11)
==10884== 
==10884== Conditional jump or move depends on uninitialised value(s)
==10884==    at 0x489DF0C: _itoa_word (_itoa.c:179)
==10884==    by 0x48B78B7: __vfprintf_internal (vfprintf-internal.c:1687)
==10884==    by 0x48A3D9A: printf (printf.c:33)
==10884==    by 0x109197: main (c2.c:11)
==10884== 
==10884== Conditional jump or move depends on uninitialised value(s)
==10884==    at 0x48B8660: __vfprintf_internal (vfprintf-internal.c:1687)
==10884==    by 0x48A3D9A: printf (printf.c:33)
==10884==    by 0x109197: main (c2.c:11)
==10884== 
==10884== Conditional jump or move depends on uninitialised value(s)
==10884==    at 0x48B7A2E: __vfprintf_internal (vfprintf-internal.c:1687)
==10884==    by 0x48A3D9A: printf (printf.c:33)
==10884==    by 0x109197: main (c2.c:11)
==10884== 
==10884== 
==10884== HEAP SUMMARY:
==10884==     in use at exit: 0 bytes in 0 blocks
==10884==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==10884== 
==10884== All heap blocks were freed -- no leaks are possible
==10884== 
==10884== Use --track-origins=yes to see where uninitialised values come from
==10884== For lists of detected and suppressed errors, rerun with: -s
==10884== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 0 from 0)


4.
gcc c2.c -o bin/c2correto.exe -g 
 valgrind --log-file="logs/log_bom_2 --leak-check=full ./bin/c2correto.exe
cat logs/2_log_bom >> c2relatorio.txt
==10909== Memcheck, a memory error detector
==10909== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10909== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==10909== Command: ./bin/c2correto.exe
==10909== Parent PID: 10878
==10909== 
==10909== 
==10909== HEAP SUMMARY:
==10909==     in use at exit: 0 bytes in 0 blocks
==10909==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==10909== 
==10909== All heap blocks were freed -- no leaks are possible
==10909== 
==10909== For lists of detected and suppressed errors, rerun with: -s
==10909== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
