1. O código foi feito para imprimir lixo de memória - e a correção manterá isso.
Há um loop infinito, "while(1)", e alocação repetitiva de memória nesse loop.
O programa printa inteiros do formato long it. Considerei mais seguro allocar com o sizeof long que com valores absolutos - que podem depender da arquitetura.


2.
devdias93@penguin:~/ED/TP3$ gdb bin/c10errado.exe -q
Reading symbols from bin/c10errado.exe...
(gdb) run
Starting program: /home/devdias93/ED/TP3/bin/c10errado.exe 
93824992252576
93824992253760
93824992253904
93824992254048
93824992254192
93824992254336
93824992254480
...   ...  ...  (loop infinito)


Program received signal SIGINT, Interrupt.
0x00007ffff7ed8833 in __GI___libc_write (fd=1, buf=0x555555559330, nbytes=15) at ../sysdeps/unix/sysv/linux/write.c:26
26      ../sysdeps/unix/sysv/linux/write.c: No such file or directory.
(gdb) quit
A debugging session is active.

        Inferior 1 [process 10416] will be killed.

Quit anyway? (y or n) y

valgrind --log-file=logs/10_log_ruim  --leak-check=full ./bin/c10errado.exe
cat logs/10_log_ruim >> c10relatorio.txt

==10977== Memcheck, a memory error detector
==10977== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10977== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==10977== Command: ./bin/c10errado.exe
==10977== Parent PID: 8258
==10977== 
==10977== 
==10977== Process terminating with default action of signal 2 (SIGINT)
==10977==    at 0x493C833: write (write.c:26)
==10977==    by 0x48CD664: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1181)
==10977==    by 0x48CC9D5: new_do_write (fileops.c:449)
==10977==    by 0x48CE708: _IO_new_do_write (fileops.c:426)
==10977==    by 0x48CE708: _IO_do_write@@GLIBC_2.2.5 (fileops.c:423)
==10977==    by 0x48CDCDD: _IO_new_file_xsputn (fileops.c:1244)
==10977==    by 0x48CDCDD: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1197)
==10977==    by 0x48B73DA: __vfprintf_internal (vfprintf-internal.c:1719)
==10977==    by 0x48A3D9A: printf (printf.c:33)
==10977==    by 0x109172: main (c10.c:10)
==10977== 
==10977== HEAP SUMMARY:
==10977==     in use at exit: 566,400 bytes in 4,425 blocks
==10977==   total heap usage: 4,426 allocs, 1 frees, 567,424 bytes allocated
==10977== 
==10977== 566,272 bytes in 4,424 blocks are definitely lost in loss record 2 of 2
==10977==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==10977==    by 0x109156: main (c10.c:9)
==10977== 
==10977== LEAK SUMMARY:
==10977==    definitely lost: 566,272 bytes in 4,424 blocks
==10977==    indirectly lost: 0 bytes in 0 blocks
==10977==      possibly lost: 0 bytes in 0 blocks
==10977==    still reachable: 128 bytes in 1 blocks
==10977==         suppressed: 0 bytes in 0 blocks
==10977== Reachable blocks (those to which a pointer was found) are not shown.
==10977== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==10977== 
==10977== For lists of detected and suppressed errors, rerun with: -s
==10977== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)



4.
==12225== Memcheck, a memory error detector
==12225== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12225== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==12225== Command: ./bin/c10correto.exe
==12225== Parent PID: 12219
==12225== 
==12225== 
==12225== HEAP SUMMARY:
==12225==     in use at exit: 0 bytes in 0 blocks
==12225==   total heap usage: 2 allocs, 2 frees, 1,104 bytes allocated
==12225== 
==12225== All heap blocks were freed -- no leaks are possible
==12225== 
==12225== For lists of detected and suppressed errors, rerun with: -s
==12225== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
